name: Doxygen Documentation Automation

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  generate-docs:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v4

      # Set Git Config
      - name: Set Git Configuration
        run: |
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            git config --global user.name "GitHub Actions Bot"

      - name: Install Doxygen
        run: |
            sudo apt-get update && sudo apt-get install doxygen -y

      # Generate Doxygen Configuration File
      - name: Generate Doxygen Configuration
        run: |
            doxygen -g
            if [ ! -f Doxyfile ]; then
                doxygen -g Doxyfile
            fi
            # Update settings using sed
            sed -i 's/^PROJECT_NAME.*/PROJECT_NAME           = "graphlib"/' Doxyfile
            sed -i 's/^PROJECT_BRIEF.*/PROJECT_BRIEF          = "A high-performance, secure C++ graph library using adjacency lists"/' Doxyfile
            sed -i 's/^PROJECT_LOGO.*/PROJECT_LOGO           =/' Doxyfile

            sed -i 's|^INPUT .*|INPUT                  = ./src ./include ./README.md|' Doxyfile
            sed -i 's|^FILE_PATTERNS .*|FILE_PATTERNS          = *.hpp *.cpp *.md|' Doxyfile
            sed -i 's|^EXCLUDE_PATTERNS .*|EXCLUDE_PATTERNS          = */test/* */examples/*|' Doxyfile

            sed -i 's|^OUTPUT_DIRECTORY .*|OUTPUT_DIRECTORY       = ./docs|' Doxyfile
            sed -i 's/^GENERATE_HTML.*/GENERATE_HTML          = YES/' Doxyfile
            sed -i 's/^HTML_OUTPUT.*/HTML_OUTPUT            = html/' Doxyfile
            sed -i 's/^HTML_TIMESTAMP.*/HTML_TIMESTAMP         = YES/' Doxyfile

            # If USE_MDFILE_AS_MAINPAGE is not in the file, add it
            grep -q '^USE_MDFILE_AS_MAINPAGE' Doxyfile \
                && sed -i 's|^USE_MDFILE_AS_MAINPAGE.*|USE_MDFILE_AS_MAINPAGE = README.md|' Doxyfile \
                || echo 'USE_MDFILE_AS_MAINPAGE = README.md' >> Doxyfile

            sed -i 's|^EXTENSION_MAPPING .*|EXTENSION_MAPPING      = md=markdown|' Doxyfile
            sed -i 's|^MARKDOWN_SUPPORT .*|MARKDOWN_SUPPORT       = YES|' Doxyfile
            sed -i 's|^GENERATE_TREEVIEW .*|GENERATE_TREEVIEW      = YES|' Doxyfile

            echo "âœ… Doxyfile configured successfully."
      # Install Graphviz and Generate Documentation
      - name: Install Graphviz and Generate Documentation
        run: |
            sudo apt-get install graphviz -y
            doxygen Doxyfile

      # Create gh-pages Branch (if not exists)
      - name: Ensure gh-pages Branch
        run: |
            if [ "$(git branch --list gh-pages)" == "" ]; then
                git checkout -b gh-pages
            else
                git branch -D gh-pages
            fi

        # Step 6: Commit and Force Push to gh-pages
      - name: Commit and Push to gh-pages
        run: |
            git push --force origin gh-pages

      #  Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/html