# ==============================================
# pyproject.toml for packaging aegisgraph as a Python module
# Author: Daniel Ferreto
# Version: 1.0.1
# Date: 2025-03-27
# Description:
#     Secure, high-performance C++ graph processing module
#     exposed to Python using pybind11 and built via scikit-build-core.
# ==============================================

[build-system]
requires = [
  "scikit-build-core>=0.8.0",
  "cibuildwheel", 
  "setuptools", 
  "wheel",
  "ninja",
  "pybind11>=2.11.1"
]
build-backend = "scikit_build_core.build"

[project]
name = "aegisgraph"
version = "1.0.1"
description = "High-performance graph processing and random walk library in C++ with Python bindings"
authors = [
  { name = "Daniel Ferreto", email = "ldanielfch@gmail.com" }
]
license = { text = "MIT" }
requires-python = ">=3.10"
readme = "README.md"
keywords = ["graph", "cpp", "pybind11", "network", "random walk", "high-performance"]
classifiers = [
  'Development Status :: 5 - Production/Stable',
  'Intended Audience :: Developers',
  'Intended Audience :: Science/Research',
  "License :: OSI Approved :: MIT License",
  'Operating System :: OS Independent',
  'Programming Language :: Python :: 3',
  'Programming Language :: Python :: 3.11',
  'Programming Language :: Python :: 3.12',
  'Programming Language :: Python :: 3.13',
  'Programming Language :: Python :: 3 :: Only',
  "Topic :: Scientific/Engineering :: Information Analysis",
  "Development Status :: 4 - Beta"
]

dependencies = []

[project.optional-dependencies]
test = [
    "pytest>=7.0",
    "pytest-cov>=4.0",  
    "coverage>=7.0"
]

[tool.scikit-build]
minimum-version = "0.7"
build-dir = "build"
wheel.expand-macos-universal-tags = true

[project.urls]
"Homepage" = "https://github.com/TheRadDani/aegisgraph"
Documentation = "https://github.com/TheRadDani/aegisgraph/wiki"
"Issues" = "https://github.com/TheRadDani/aegisgraph/issues"
Changelog = "https://github.com/TheRadDani/aegisgraph/releases"
"Source Code" = 'https://github.com/TheRadDani/aegisgraph'

[tool.scikit-build.cmake]
minimum-version = "3.25"
build-type = "Release"
args = [
  "--fresh",  # Forces new configuration, ignores cache
  "-DPYBIND11_FINDPYTHON=ON",
  "-G", "Ninja",  # Force Ninja generator
  "-GNinja",
  "--no-warn-unused-cli"
]
define = { "ABSEIL_BUILD_TESTING" = false, "ABSL_PROPAGATE_CXX_STD" = true, "Python3_FIND_STRATEGY" = "LOCATION" }


[tool.scikit-build.sdist]
include = [
    "third_party/*",
    "src/*",
    "include/*",
    "bindings/*",
    "CMakeLists.txt",
    "asan_options.cfg",
    "pyproject.toml",
    "README.md"
]

[tool.cibuildwheel]
build-frontend = "build"
skip = "*-musllinux*"  # Abseil has musl compatibility issues
test-command = "pytest {project}/tests"
test-requires = ["pytest", "pytest-cov"]
environment = { "CFLAGS" = "-mavx2 -mfma -mbmi2", "CXXFLAGS" = "-mavx2 -mfma -mbmi2" }

# pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
#addopts = "--verbose --cov=aegisgraph --cov-report=term-missing"
python_files = "test_*.py"